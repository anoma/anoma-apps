module Counter.Unique.ConsumableTransaction;

import Stdlib.Prelude open;
import Applib open;

--- Returns a ;Transaction; that creates the passed ;Resource;
createConsumableTransaction (resource : Resource) : Transaction :=
  let
    delta := zeroDelta;
    deltaProof := proveDelta delta;
    consumedResource := resource@Resource{ephemeral := true};
    createdResource := resource;
  in mkTransaction@{
       roots := [0];
       actions :=
         [
           mkActionHelper@{
             consumed := [consumedResource];
             created := [createdResource];
           };
         ];
       delta := zeroDelta;
       deltaProof := deltaProof;
     };

main (resource : Resource) : TransactionRequest :=
  resource |> createConsumableTransaction |> TransactionRequest.fromTransaction;
