module Counter.Unique.Consumable;

import Stdlib.Prelude open;
import Applib open;

-- randSeed is expected to be a Nock atom encoding a 32 byte seed.
-- TODO use monadic interface to generate the random nonce
main (randSeed : AnomaAtom) : Resource :=
  let
    nonce : Nonce :=
      generateNonce (RandSeed.internalMk (fromAnomaContents 32 randSeed));
  in Resource.mk@{
       label := Label.fromNat 0;
       logic := Encoded.encode Logic.alwaysTrue;
       ephemeral := false;
       quantity := 1;
       value := 0;
       nullifierKeyCommitment := Universal.nullifierKeyCommitment;
       nonce;
       unusedRandSeed := 0;
     };
