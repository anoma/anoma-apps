module HelloWorld.Interface.Transaction;

import Stdlib.Prelude open;
import Applib open;
import HelloWorld.Resource open;

initialize {M : Type -> Type} {{Monad M}} {{Tx M}} : M Transaction :=
    do {
      nonce1 <- genRandomNonce;
      nonce2 <- genRandomNonce;
      pure
        prepareTransaction@{
          consumed :=
            [
              mkHelloWorldResource@{
                nonce := nonce1;
                ephemeral := true;
              };
            ];
          created :=
            [
              mkHelloWorldResource@{
                nonce := nonce2;
                ephemeral := false;
              };
            ];
        };
    };

prepareTransaction (consumed created : List Resource) : Transaction :=
  mkTransactionHelper@{
    actions :=
      [
        mkActionHelper@{
          consumed;
          created;
        };
      ];
  };

ctx : TxContext :=
  mkTxContext@{
    caller := Universal.identity;
    currentRoot := mkRoot 0;
  };

main : TransactionRequest := buildTransactionRequest 0 ctx initialize;
